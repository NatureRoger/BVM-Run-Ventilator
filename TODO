* [ ] Rework gcview zooming/rotation/move behavior
* [ ] Improve stlview
* [x] Add tool to select gcode area to ignore
* [ ] Add calibration helper
* [ ] Improve tabbed mode for wx 2.8 ? (the main toolbar is not wrapping as in 2.9)
- [ ] Review all settings long help
- [ ] Make heavy 3D viz work
- [ ] Add speed slider
- [ ] Fix code injection
- [ ] Improve gcode plater
- [ ] Check what happens for layer switch for 2D viewer


F    , SECOND1000
50000 278
40000 278
30000 278
25000 279
20000 287
15000 336
12000 419
11000 451
10000 496
9500  514
9000  556
8500  587
8000  612
7500  640
7000  704
6500  753
6000  820
5500  901
5000  966
4500  1074
4000  1202
3500  1391
3000  1614
2500  1947
2000  2419
1500  3232
1000  4826

F_Value x88 spent time 

Stoke Volumn table
1 27  100
1 32  200
1 40  300
1 47  400
1 54  500
1 56  600
1 62  700
1 70  800
1 80  900


..

V_mL  = self.settings.InHale_VmL
V_bpm = self.settings.Breaths_p_min (bpm  15)
self.Stoke_X = DB_Volumn_Get_Stoke(db, BVM_id, V_mL, debug_mod=0)

t_stoke = self.Stoke_X

...
# In-Hale 2 stable
self.InHale2_X = self.Stoke_X *  self.settings.InHale2_stable_Xratio
self.InHale2_time = self.InHale_time * self.settings.InHale2_stable_Tratio
self.InHale2_F = DB_Get_speed_Fvalue(db,self.Stoke_X,V_bpm, 0, self.InHale2_X, self.settings.BVM_RUN_Max_StokeX, self.InHale2_time, debug_mod=0) 

Line_data="G0 X%.2f F%d" % (self.InHale2_X, self.InHale2_F)
...

t = self.InHale2_time = self.InHale_time * self.settings.InHale2_stable_Tratio
Stoke= abs(x1-x2) 
X_Per_Second = t_stoke * 2 * V_bpm / 60

T1(avage time)= Stoke_abs(x1-x2) /  X_Per_Second 
  v_F_VALUE=DB_Time_Get_Fvalue(db, t, debug_mod=0)
  F_VALUE = v_F_VALUE * t/T1(avage time)
  

DB_Get_speed_Fvalue(db, t_stoke, bmp, x1, x2, total_x, t, debug_mod=0):

  t = self.InHale2_time = self.InHale_time * self.settings.InHale2_stable_Tratio

  Stoke= abs(x1-x2) 

  X_Per_Second = t_stoke * 2 * V_bpm / 60

  T1(avage time)= Stoke_abs(x1-x2) /  X_Per_Second  
  
  1X_spent_time= T1(avage time)/Stoke_abs(x1-x2) 


vSecond1000 = int( total_x / Stoke * t * 1000) 

((((( vSecond1000 = t * 1000/t_stoke<volumn_stoke> * total_x<880/10> )))))
